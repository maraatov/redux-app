{"version":3,"sources":["hooks/http.hook.js","components/heroesList/heroesSlice.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/filtersSlice.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","store/index.js","index.js"],"names":["useHttp","request","url","method","body","headers","fetch","response","ok","Error","status","json","data","fetchHeroes","createAsyncThunk","a","heroesSlice","createSlice","name","initialState","heroes","heroesLoadingStatus","reducers","heroCreated","state","action","push","payload","heroDeleted","filter","item","id","extraReducers","builder","addCase","pending","fulfilled","rejected","addDefaultCase","actions","reducer","heroesFetching","heroesFetched","heroesFetchingError","HeroesListItem","elementClassName","description","element","onDelete","className","src","alt","style","objectFit","onClick","type","aria-label","Spinner","role","HeroesList","filteredHeroesSelector","createSelector","filters","activeFilter","filteredHeroes","useSelector","dispatch","useDispatch","useCallback","then","catch","err","console","log","useEffect","length","arr","elements","map","props","HeroesAddForm","filtersLoadingStatus","useState","setName","setDescription","setElement","onSubmit","e","preventDefault","newHero","uuidv4","JSON","stringify","htmlFor","value","onChange","target","required","placeholder","label","renderFilters","fetchFilters","activeFilterChanged","filtersFetching","filtersFetched","filtersFetchingError","HeroesFilters","btnClass","classNames","active","App","stringMiddleware","next","store","configureStore","middleware","getDefaultMiddleware","concat","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAEaA,EAAU,WA2BnB,MAAO,CAACC,QAxBK,uCAAG,WAAOC,GAAG,2FAA6E,OAA3EC,EAAM,+BAAG,MAAOC,EAAI,+BAAG,KAAMC,EAAO,+BAAG,CAAC,eAAgB,oBAAmB,kBAKxEC,MAAMJ,EAAK,CAACC,SAAQC,OAAMC,YAAU,KAAD,EAA5C,IAARE,EAAQ,QAEAC,GAAG,CAAD,qBACN,IAAIC,MAAM,mBAAD,OAAoBP,EAAG,qBAAaK,EAASG,SAAU,KAAD,mBAGtDH,EAASI,OAAO,KAAD,GAAxB,OAAJC,EAAI,yBAEHA,GAAI,uGAKlB,gBAlBY,wC,cCIJC,EAAcC,YACzB,qBAAoB,sBACpB,8BAAAC,EAAA,sDACiB,OADjB,EACsBf,IAAZC,EAAO,EAAPA,QAAO,SACFA,EAAQ,gCAA+B,oFAIlDe,EAAcC,YAAY,CAC9BC,KAAM,SACNC,aAfmB,CACnBC,OAAQ,GACRC,oBAAqB,QAcrBC,SAAU,CAORC,YAAc,SAACC,EAAOC,GACpBD,EAAMJ,OAAOM,KAAKD,EAAOE,UAE3BC,YAAa,SAACJ,EAAOC,GACnBD,EAAMJ,OAASI,EAAMJ,OAAOS,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAON,EAAOE,aAGlEK,cAAe,SAACC,GACdA,EACCC,QAAQrB,EAAYsB,SAAS,SAAAX,GAAUA,EAAMH,oBAAsB,aACnEa,QAAQrB,EAAYuB,WAAY,SAACZ,EAAOC,GACvCD,EAAMH,oBAAsB,OAC5BG,EAAMJ,OAASK,EAAOE,WAEvBO,QAAQrB,EAAYwB,UAAS,SAAAb,GAAUA,EAAMH,oBAAsB,WACnEiB,gBAAe,kBAIbC,EAAoBvB,EAApBuB,QAEQC,EAFYxB,EAAXwB,QAOdjB,GAEEgB,EALFE,eAKEF,EAJFG,cAIEH,EAHFI,oBAGEJ,EAFFhB,aACAK,EACEW,EADFX,Y,OCPagB,EA9CQ,SAAH,GAAkD,IAEhEC,EAFoB3B,EAAI,EAAJA,KAAM4B,EAAW,EAAXA,YAAaC,EAAO,EAAPA,QAASC,EAAQ,EAARA,SAIpD,OAAQD,GACN,IAAK,OACHF,EAAmB,wBACnB,MACF,IAAK,QACHA,EAAmB,yBACnB,MACF,IAAK,OACHA,EAAmB,yBACnB,MACF,IAAK,QACHA,EAAmB,2BACnB,MACF,QACEA,EAAmB,yBAGvB,OACE,qBACEI,UAAS,kDAA6CJ,GAAmB,UAEzE,qBACEK,IAAI,6EACJD,UAAU,0BACVE,IAAI,eACJC,MAAO,CAAEC,UAAW,WAEtB,sBAAKJ,UAAU,YAAW,UACxB,oBAAIA,UAAU,aAAY,SAAE/B,IAC5B,mBAAG+B,UAAU,YAAW,SAAEH,OAE5B,sBAAMQ,QAASN,EAAUC,UAAU,wFAAuF,SACxH,wBACEM,KAAK,SACLN,UAAU,sBACVO,aAAW,gBC/BNC,EARC,WACZ,OACI,qBAAKR,UAAU,8BAA8BS,KAAK,SAAQ,SACtD,sBAAMT,UAAU,kBAAiB,SAAC,kBCgE/BU,EA1DI,WACjB,IAAMC,EAAyBC,aAC7B,SAACrC,GAAK,OAAKA,EAAMsC,QAAQC,gBACzB,SAACvC,GAAK,OAAKA,EAAMJ,OAAOA,UACxB,SAACS,EAAQT,GACP,MAAe,QAAXS,EACKT,EAEFA,EAAOS,QAAO,SAACC,GACpB,OAAOA,EAAKiB,UAAYlB,QAKxBmC,EAAiBC,YAAYL,GAC7BvC,EAAsB4C,aAAY,SAACzC,GAAK,OAAKA,EAAMH,uBACnD6C,EAAWC,cACTlE,EAAYD,IAAZC,QAEF+C,EAAWoB,uBACf,SAACrC,GACC9B,EAAQ,gCAAD,OAAiC8B,GAAM,UAC3CsC,KAAKH,EAAStC,EAAYG,KAC1BuC,OAAM,SAACC,GAAG,OAAKC,QAAQC,IAAIF,QAEhC,CAACtE,EAASiE,IAOZ,GAJAQ,qBAAU,WACRR,EAASrD,OACR,IAEyB,YAAxBQ,EACF,OAAO,cAAC,EAAO,IACV,GAA4B,UAAxBA,EACT,OAAO,oBAAI4B,UAAU,mBAAkB,SAAC,0FAG1CuB,QAAQC,IAAIT,GAaZQ,QAAQC,IAAIT,EAAeW,QAE3B,IAb0BC,EAapBC,GAboBD,EAaQZ,IAZN,IAAfY,EAAID,OACN,oBAAI1B,UAAU,mBAAkB,SAAC,qFAEhC,OAAH2B,QAAG,IAAHA,OAAG,EAAHA,EAAKE,KAAI,YAAuB,IAApB/C,EAAE,EAAFA,GAAOgD,EAAK,sBAC7B,OACE,cAAC,EAAc,aAAU/B,SAAU,kBAAMA,EAASjB,KAASgD,GAAtChD,MAS3B,OAAO,6BAAK8C,K,eCgCCG,EA1FO,WAAO,IAAD,EACgBf,aAAY,SAAAzC,GAAK,OAAIA,EAAMsC,WAA5DA,EAAO,EAAPA,QAASmB,EAAoB,EAApBA,qBACThF,EAAWD,IAAXC,QACDiE,EAAWC,cAAc,EAEPe,mBAAS,IAAG,mBAA7BhE,EAAI,KAAEiE,EAAO,OACkBD,mBAAS,IAAG,mBAA3CpC,EAAW,KAAEsC,EAAc,OACJF,mBAAS,IAAG,mBAAnCnC,EAAO,KAAEsC,EAAU,KAmC1B,OACI,uBAAMpC,UAAU,+BAA+BqC,SAjC3B,SAACC,GACrBA,EAAEC,iBACF,IAAMC,EAAU,CACZ1D,GAAI2D,cACJxE,OACA4B,cACAC,WAGJ9C,EAAQ,+BAAgC,OAAQ0F,KAAKC,UAAUH,IAC9DpB,KAAKH,EAAS3C,EAAYkE,KAC1BnB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAE1BY,EAAQ,IACRC,EAAe,IACfC,EAAW,KAkB8D,UACrE,sBAAKpC,UAAU,OAAM,UACjB,uBAAO4C,QAAQ,OAAO5C,UAAU,kBAAiB,SAAC,2FAClD,uBACI6C,MAAO5E,EACP6E,SAAU,SAACR,GAAC,OAAKJ,EAAQI,EAAES,OAAOF,QAClCG,UAAQ,EACR1C,KAAK,OACLrC,KAAK,OACL+B,UAAU,eACVlB,GAAG,OACHmE,YAAY,mFAGpB,sBAAKjD,UAAU,OAAM,UACjB,uBAAO4C,QAAQ,OAAO5C,UAAU,kBAAiB,SAAC,qDAClD,0BACI6C,MAAOhD,EACPiD,SAAU,SAACR,GAAC,OAAKH,EAAeG,EAAES,OAAOF,QACzCG,UAAQ,EACR/E,KAAK,OACL+B,UAAU,eACVlB,GAAG,OACHmE,YAAY,sDACZ9C,MAAO,CAAC,OAAU,cAG1B,sBAAKH,UAAU,OAAM,UACjB,uBAAO4C,QAAQ,UAAU5C,UAAU,aAAY,SAAC,yHAChD,wBACI6C,MAAO/C,EACPgD,SAAU,SAACR,GAAC,OAAKF,EAAWE,EAAES,OAAOF,QACrCG,UAAQ,EACRhD,UAAU,cACVlB,GAAG,UACHb,KAAK,UAAS,SAlDR,SAAC4C,EAASmB,GAC5B,MAA6B,YAAzBA,EACO,iCAAQ,4GACiB,UAAzBA,EACA,iCAAQ,0FAEfnB,GAAWA,EAAQa,OAAS,EACrBb,EAAQgB,KAAI,YAAoB,IAAlB5D,EAAI,EAAJA,KAAMiF,EAAK,EAALA,MAEvB,OAAO,wBAAmBL,MAAO5E,EAAK,SAAEiF,GAApBjF,WAH5B,EA6CakF,CAActC,EAASmB,QAIhC,wBAAQ1B,KAAK,SAASN,UAAU,kBAAiB,SAAC,mD,iBChFjDoD,EAAevF,YAC1B,uBAAsB,sBACtB,8BAAAC,EAAA,sDACiB,OADjB,EACsBf,IAAZC,EAAO,EAAPA,QAAO,SACFA,EAAQ,iCAAgC,oFAInDe,EAAcC,YAAY,CAC9BC,KAAM,UACNC,aAhBmB,CACnB2C,QAAS,GACTmB,qBAAsB,OACtBlB,aAAc,OAcdzC,SAAU,CAORgF,oBAAsB,SAAC9E,EAAOC,GAC5BD,EAAMuC,aAAetC,EAAOE,UAGhCK,cAAe,SAACC,GACdA,EACCC,QAAQmE,EAAalE,SAAS,SAAAX,GAAUA,EAAMyD,qBAAuB,aACrE/C,QAAQmE,EAAajE,WAAW,SAACZ,EAAOC,GACvCD,EAAMyD,qBAAuB,OAC7BzD,EAAMsC,QAAUrC,EAAOE,WAExBO,QAAQmE,EAAahE,UAAU,SAAAb,GAAUA,EAAMyD,qBAAuB,WACtE3C,gBAAe,kBAIbC,EAAoBvB,EAApBuB,QAEQC,EAFYxB,EAAXwB,QAOd8D,GACE/D,EAJFgE,gBAIEhE,EAHFiE,eAGEjE,EAFFkE,qBAEElE,EADF+D,qBCQaI,EAnDO,WAAO,IAAD,EAC8BzC,aACtD,SAACzC,GAAK,OAAKA,EAAMsC,WADXA,EAAO,EAAPA,QAASmB,EAAoB,EAApBA,qBAAsBlB,EAAY,EAAZA,aAGjCG,EAAWC,cACTlE,EAAYD,IAAZC,QAMR,GAJAyE,qBAAU,WACRR,EAASmC,EAAapG,MACrB,IAE0B,YAAzBgF,EACF,OAAO,cAAC,EAAO,IACV,GAA6B,UAAzBA,EACT,OAAO,oBAAIhC,UAAU,mBAAkB,SAAC,0FAG1C,IAAuB2B,EAsBjBC,EArBe,KADED,EAsBQd,GArBrBa,OACC,oBAAI1B,UAAU,mBAAkB,SAAC,uGAEnC2B,EAAIE,KAAI,YAAiC,IAA9B5D,EAAI,EAAJA,KAAM+B,EAAS,EAATA,UAAWkD,EAAK,EAALA,MAC3BQ,EAAWC,IAAW,MAAO3D,EAAW,CAC5C4D,OAAQ3F,IAAS6C,IAGnB,OACE,wBAEEhC,GAAIb,EACJ+B,UAAW0D,EACXrD,QAAS,kBAAMY,EAASoC,EAAoBpF,KAAO,SAElDiF,GALIjF,MAab,OACE,qBAAK+B,UAAU,sBAAqB,SAClC,sBAAKA,UAAU,YAAW,UACxB,mBAAGA,UAAU,YAAW,SAAC,sLACzB,qBAAKA,UAAU,YAAW,SAAE4B,UChCrBiC,G,MAfH,WAER,OACI,sBAAM7D,UAAU,MAAK,SACjB,sBAAKA,UAAU,UAAS,UACpB,cAAC,EAAU,IACX,sBAAKA,UAAU,uBAAsB,UACjC,cAAC,EAAa,IACd,cAAC,EAAa,cCT5B8D,EAAmB,WAAH,OAAS,SAACC,GAAI,OAAK,SAACvF,GACxC,OACWuF,EADW,kBAAXvF,EACK,CACR8B,KAAM9B,GAGFA,MASCwF,EANDC,YAAe,CAC3B1E,QAAS,CAACpB,SAAQ0C,WAClBqD,WAAY,SAAAC,GAAoB,OAAIA,IAAuBC,OAAON,IAClEO,UAAUC,I,MCRZC,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,IAAQ,CAACT,MAAOA,EAAM,SACrB,cAAC,EAAG,QAGRU,SAASC,eAAe,W","file":"static/js/main.eda7a42b.chunk.js","sourcesContent":["import { useCallback } from \"react\";\n\nexport const useHttp = () => {\n    // const [process, setProcess] = useState('waiting');\n\n    const request = async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        // setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            // setProcess('error');\n            throw e;\n        }\n    };\n\n    // const clearError = useCallback(() => {\n        // setProcess('loading');\n    // }, []);\n\n    return {request, \n            // clearError, \n            // process, \n            // setProcess\n        }\n}","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { useHttp } from \"../../hooks/http.hook\";\n\n\nconst initialState = {\n  heroes: [],\n  heroesLoadingStatus: \"idle\",\n};\n\nexport const fetchHeroes = createAsyncThunk(\n  'heroes/fetchHeroes',\n  async ()=>{\n    const { request } = useHttp();\n    return await request(`http://localhost:3001/heroes`)\n  }\n)\n\nconst heroesSlice = createSlice({\n  name: 'heroes',\n  initialState,\n  reducers: {\n    // heroesFetching: state => {state.heroesLoadingStatus = 'loading'},\n    // heroesFetched: (state, action) => {\n    //   state.heroesLoadingStatus = 'idle';\n    //   state.heroes = action.payload;\n    // },\n    // heroesFetchingError: state => {state.heroesLoadingStatus = 'error'},\n    heroCreated:  (state, action) => {\n      state.heroes.push(action.payload);\n    },\n    heroDeleted: (state, action) => {\n      state.heroes = state.heroes.filter(item => item.id !== action.payload);\n    },\n  },\n  extraReducers: (builder) =>{\n    builder\n    .addCase(fetchHeroes.pending, state => {state.heroesLoadingStatus = 'loading'})\n    .addCase(fetchHeroes.fulfilled,  (state, action) => {\n      state.heroesLoadingStatus = 'idle';\n      state.heroes = action.payload;\n    })\n    .addCase(fetchHeroes.rejected,state => {state.heroesLoadingStatus = 'error'} )\n    .addDefaultCase(()=>{})\n  }\n});\n\nconst {actions, reducer} = heroesSlice;\n\nexport default reducer;\nexport const {\n  heroesFetching,\n  heroesFetched,\n  heroesFetchingError,\n  heroCreated,\n  heroDeleted,\n} = actions;\n","\nconst HeroesListItem = ({ name, description, element, onDelete }) => {\n\n  let elementClassName;\n\n  switch (element) {\n    case \"fire\":\n      elementClassName = \"bg-danger bg-gradient\";\n      break;\n    case \"water\":\n      elementClassName = \"bg-primary bg-gradient\";\n      break;\n    case \"wind\":\n      elementClassName = \"bg-success bg-gradient\";\n      break;\n    case \"earth\":\n      elementClassName = \"bg-secondary bg-gradient\";\n      break;\n    default:\n      elementClassName = \"bg-warning bg-gradient\";\n  }\n\n  return (\n    <li\n      className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}\n    >\n      <img\n        src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\"\n        className=\"img-fluid w-25 d-inline\"\n        alt=\"unknown hero\"\n        style={{ objectFit: \"cover\" }}\n      />\n      <div className=\"card-body\">\n        <h3 className=\"card-title\">{name}</h3>\n        <p className=\"card-text\">{description}</p>\n      </div>\n      <span onClick={onDelete} className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n        <button\n          type=\"button\"\n          className=\"btn-close btn-close\"\n          aria-label=\"Close\"\n        ></button>\n      </span>\n    </li>\n  );\n};\n\nexport default HeroesListItem;\n","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import { useHttp } from \"../../hooks/http.hook\";\nimport { useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createSelector } from \"@reduxjs/toolkit\";\n\n// import {fetchHeroes} from \"../../actions\";\nimport {heroDeleted, fetchHeroes} from \"./heroesSlice\"\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from \"../spinner/Spinner\";\n\nconst HeroesList = () => {\n  const filteredHeroesSelector = createSelector(\n    (state) => state.filters.activeFilter,\n    (state) => state.heroes.heroes,\n    (filter, heroes) =>{\n      if (filter === \"all\") {\n        return heroes;\n      }\n      return heroes.filter((item) => {\n        return item.element === filter;\n      });\n    });\n    \n\n  const filteredHeroes = useSelector(filteredHeroesSelector);\n  const heroesLoadingStatus = useSelector((state) => state.heroesLoadingStatus);\n  const dispatch = useDispatch();\n  const { request } = useHttp();\n\n  const onDelete = useCallback(\n    (id) => {\n      request(`http://localhost:3001/heroes/${id}`, \"DELETE\")\n        .then(dispatch(heroDeleted(id)))\n        .catch((err) => console.log(err));\n    },\n    [request, dispatch]\n  );\n\n  useEffect(() => {\n    dispatch(fetchHeroes());\n  }, []);\n\n  if (heroesLoadingStatus === \"loading\") {\n    return <Spinner />;\n  } else if (heroesLoadingStatus === \"error\") {\n    return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>;\n  }\n\n  console.log(filteredHeroes);\n\n  const renderHeroesList = (arr) => {\n    if (arr && arr.length === 0) {\n      return <h5 className=\"text-center mt-5\">Героев пока нет</h5>;\n    }\n    return arr?.map(({ id, ...props }) => {\n      return (\n        <HeroesListItem key={id} onDelete={() => onDelete(id)} {...props} />\n      );\n    });\n  };\n\n  console.log(filteredHeroes.length);\n\n  const elements = renderHeroesList(filteredHeroes);\n  // console.log(elements)\n  return <ul>{elements}</ul>;\n};\n\nexport default HeroesList;\n","\nimport {useHttp} from '../../hooks/http.hook';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { heroCreated } from '../heroesList/heroesSlice';\n\nconst HeroesAddForm = () => {\n    const {filters, filtersLoadingStatus} = useSelector(state => state.filters);\n    const {request} = useHttp();\n    const dispatch = useDispatch();\n\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [element, setElement] = useState('');\n\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        const newHero = {\n            id: uuidv4(),\n            name,\n            description,\n            element,\n        }\n\n        request(\"http://localhost:3001/heroes\", \"POST\", JSON.stringify(newHero))\n        .then(dispatch(heroCreated(newHero)))\n        .catch(err => console.log(err));\n\n        setName('');\n        setDescription('');\n        setElement('');\n    }\n\n    const renderFilters = (filters, filtersLoadingStatus) => {\n        if (filtersLoadingStatus === \"loading\") {\n            return <option>Загрузка элементов</option>\n        } else if (filtersLoadingStatus === \"error\") {\n            return <option>Ошибка загрузки</option>\n        }\n        if (filters && filters.length > 0 ) {\n            return filters.map(({name, label}) => {\n                // if (name === 'all') { return null };\n                return <option key={name} value={name}>{label}</option>\n            })\n        }\n    }\n\n    return (\n        <form className=\"border p-4 shadow-lg rounded\" onSubmit={onSubmitHandler}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\n                <input \n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    required\n                    type=\"text\" \n                    name=\"name\" \n                    className=\"form-control\" \n                    id=\"name\" \n                    placeholder=\"Как меня зовут?\"/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\n                <textarea\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                    required\n                    name=\"text\" \n                    className=\"form-control\" \n                    id=\"text\" \n                    placeholder=\"Что я умею?\"\n                    style={{\"height\": '130px'}}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\n                <select \n                    value={element}\n                    onChange={(e) => setElement(e.target.value)}\n                    required\n                    className=\"form-select\" \n                    id=\"element\" \n                    name=\"element\">\n                    {renderFilters(filters, filtersLoadingStatus)}\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\n        </form>\n    )\n}\n\n\n\nexport default HeroesAddForm;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { useHttp } from \"../../hooks/http.hook\";\n\n\nconst initialState = {\n  filters: [],\n  filtersLoadingStatus: \"idle\",\n  activeFilter: \"all\",\n};\n\nexport const fetchFilters = createAsyncThunk(\n  'filters/fetchFilters',\n  async ()=>{\n    const { request } = useHttp();\n    return await request(\"http://localhost:3001/filters\")\n  }\n)\n\nconst heroesSlice = createSlice({\n  name: 'filters',\n  initialState,\n  reducers: {\n    // filtersFetching: state => {state.filtersLoadingStatus = 'loading'},\n    // filtersFetched: (state, action) => {\n    //   state.filtersLoadingStatus = 'idle';\n    //   state.filters = action.payload;\n    // },\n    // filtersFetchingError: state => {state.filtersLoadingStatus = 'error'},\n    activeFilterChanged:  (state, action) => {\n      state.activeFilter = action.payload;\n    },\n  },\n  extraReducers: (builder) =>{\n    builder\n    .addCase(fetchFilters.pending, state => {state.filtersLoadingStatus = 'loading'},)\n    .addCase(fetchFilters.fulfilled, (state, action) => {\n      state.filtersLoadingStatus = 'idle';\n      state.filters = action.payload;\n    },)\n    .addCase(fetchFilters.rejected, state => {state.filtersLoadingStatus = 'error'}, )\n    .addDefaultCase(()=>{})\n  }\n});\n\nconst {actions, reducer} = heroesSlice;\n\nexport default reducer;\nexport const {\n  filtersFetching,\n  filtersFetched,\n  filtersFetchingError,\n  activeFilterChanged,\n} = actions;","import { useHttp } from \"../../hooks/http.hook\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport classNames from \"classnames\";\n// import {fetchFilters} from \"../../actions\";\nimport{activeFilterChanged, fetchFilters} from \"./filtersSlice\";\nimport Spinner from \"../spinner/Spinner\";\n\nconst HeroesFilters = () => {\n  const { filters, filtersLoadingStatus, activeFilter } = useSelector(\n    (state) => state.filters\n  );\n  const dispatch = useDispatch();\n  const { request } = useHttp();\n\n  useEffect(() => {\n    dispatch(fetchFilters(request));\n  }, []);\n\n  if (filtersLoadingStatus === \"loading\") {\n    return <Spinner />;\n  } else if (filtersLoadingStatus === \"error\") {\n    return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>;\n  }\n\n  const renderFilters = (arr) => {\n    if (arr.length === 0) {\n      return <h5 className=\"text-center mt-5\">Фильтры не найдены</h5>;\n    }\n    return arr.map(({ name, className, label }) => {\n      const btnClass = classNames(\"btn\", className, {\n        active: name === activeFilter,\n      });\n\n      return (\n        <button\n          key={name}\n          id={name}\n          className={btnClass}\n          onClick={() => dispatch(activeFilterChanged(name))}\n        >\n          {label}\n        </button>\n      );\n    });\n  };\n\n  const elements = renderFilters(filters);\n\n  return (\n    <div className=\"card shadow-lg mt-4\">\n      <div className=\"card-body\">\n        <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n        <div className=\"btn-group\">{elements}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeroesFilters;\n","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import heroes from \"../components/heroesList/heroesSlice\";\nimport filters from \"../components/heroesFilters/filtersSlice\"\n\nimport { configureStore } from '@reduxjs/toolkit';\n\nconst stringMiddleware = () => (next) => (action) => {\n  if (typeof action === 'string') {\n      return next({\n          type: action\n      })\n  }\n  return next(action)\n};\n\nconst store = configureStore({\n  reducer: {heroes, filters},  \n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware),\n  devTools: process.env.NODE_ENV !== 'production',\n})\n\nexport default store;\n\n// import heroes from \"../reducers/heroes\";\n// import filters from \"../reducers/filters\";\n// import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\n// import ReduxThunk from \"redux-thunk\";\n\n// enhancer может модифицировать весь store, а Middleware только dispatch (next в функции)\n// const enhancer = (createStore) => (...args) => {\n//   const store = createStore(...args);\n\n//   const oldDispatch = store.dispatch;\n//   store.dispatch = (action) => {\n//       if (typeof action === 'string') {\n//           return oldDispatch({\n//               type: action\n//           })\n//       }\n//       return oldDispatch(action)\n//   }\n//   return store;\n// }\n\n// const store = createStore(\n//   combineReducers({ heroes, filters }),\n//   compose(\n//     applyMiddleware(ReduxThunk, stringMiddleware),\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//     )\n  // compose(\n  //   enhancer,\n  //   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  //   )\n    // );\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}